#region Prolog
#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################

cControlPrefix = '}';

#*** Log File Name
cConfigDim = cControlPrefix | 'tp_config';
If (DimensionExists(cConfigDim) = 1);
	cGenerateLog = ATTRS(cConfigDim, 'Generate TI Log', 'String Value');
Else;
	cGenerateLog = 'N';
EndIf;

cTM1Process = GetProcessName();
StringGlobalVariable('gPrologLog');
StringGlobalVariable('gEpilogLog');
StringGlobalVariable('gDataLog');

IF (cGenerateLog @= 'Y' % cGenerateLog @= 'T');
vReturnValue = ExecuteProcess(cControlPrefix | 'tp_get_log_file_names', 'pExecutionId', pExecutionId,
'pProcess', cTM1Process, 'pControl', 'Y');
If (vReturnValue <> ProcessExitNormal());
	ProcessError;
EndIf;
Endif;

cPrologLog = gPrologLog;
cEpilogLog = gEpilogLog;
cDataLog = gDataLog;
cTM1Log = cPrologLog;

#***
cTaskNavDimensions = '}tp_task_navigation_dims}' | pAppId;
cTaskNavigationCube = '}tp_task_navigations}' | pAppId;
#***
cApprovalDIM = ATTRS(cControlPrefix | 'tp_applications', pAppId, 'ApprovalDimension');
cVersionDim = ATTRS('}tp_applications', pAppId, 'VersionDimension');
vCubeName = pCubeName;

#***create Security overlay cube
If (cGenerateLog @= 'Y');
	TextOutput(cTM1Log, TIMST(NOW, '\Y-\m-\d \h:\i:\s'), 'Check for security overly cube and RD cell security cube for ' | vCubeName);
EndIf;

vSecuirtyOverlayCube = '}SecurityOverlayGlobal_' | vCubeName;
vCellSecurityPermissionCube = '}CellSecurity_}tp_application_permission}' | pAppId;			
vDimIndex =1;
vDimension = TABDIM(vCubeName, vDimIndex);
vTokenString = '';
vNavDimensionFound = 'F';
vVersionFound = 'F';
While (vDimension @<> '');
	vTotalNavDimensions = DIMSIZ(cTaskNavDimensions);
	vNavLooper = 1;
	vIsNavDimension = 'F';
	While (vNavLooper <= vTotalNavDimensions);
		vNavDimension = DIMNM(cTaskNavDimensions, vNavLooper);
		IF (vDimension @= vNavDimension);
			vIsNavDimension = 'T';
		Endif;

		vNavLooper = vNavLooper +1;
	End;

	IF (vIsNavDimension @= 'T');
		vSingleToken = '1';
		vNavDimensionFound  = 'T';
	ElseIF (vDimension @= cVersionDim);
		vSingleToken = '1';
		vVersionFound = 'T';
	Else;
		vSingleToken = '0';
	EndIf;

	IF (vDimIndex > 1);
		vSingleToken = ':' | vSingleToken;
	Endif;

	vTokenString = vTokenString | vSingleToken;
	vDimIndex = vDimIndex +1;
	vDimension = TABDIM(vCubeName, vDimIndex);
End;

IF (vNavDimensionFound  @= 'T');
	IF (CubeExists(vSecuirtyOverlayCube) = 0);
		SecurityOverlayCreateGlobalDefault(vCubeName, vTokenString);
	Endif;
Endif;

If (cGenerateLog @= 'Y');
	TextOutput(cTM1Log, TIMST(NOW, '\Y-\m-\d \h:\i:\s'), 'The end has been reached.');
EndIf;
#endregion