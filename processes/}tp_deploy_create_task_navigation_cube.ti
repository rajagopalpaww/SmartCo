#region Prolog


#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################

cTaskNavigationDim = '}tp_task_navigation_dims}' | pAppId;
IF (DimensionExists(cTaskNavigationDim)=0);
DimensionCreate(cTaskNavigationDim);
Endif;

dimSeparater = '*';
vPosDim = 0;
vStringToScan = pNavigationDimensions;
vPosDim = SCAN(dimSeparater, vStringToScan);

While (vPosDim >0);
	vDimName = SUBST(vStringToScan, 1, vPosDim-1);
	DimensionElementInsert(cTaskNavigationDim, '', vDimName, 'N');
	vStringToScan = SUBST(vStringToScan, vPosDim +1, LONG(vStringToScan)-vPosDim);
	vPosDim = SCAN(dimSeparater, vStringToScan);
End;



#endregion
#region Epilog


#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################

cTaskNavigationCube = '}tp_task_navigations}' | pAppId;
cTaskDimension = '}tp_tasks}' | pAppId;
cTaskNavigationMeasureDim = '}tp_task_navigations';
IF (cubeExists(cTaskNavigationCube) =0);
CubeCreate(cTaskNavigationCube, cTaskDimension, cTaskNavigationDim, cTaskNavigationMeasureDim);
Endif;

#***
#If there is one navigation dimension only and it is the same as the approval dimension, 
#then use the task dimension element to populate the navigation element
cApprovalDIM = ATTRS('}tp_applications', pAppId, 'ApprovalDimension');
cNavElemField = 'NavigationElement';
IF (DIMSIZ(cTaskNavigationDim) =1 & DIMNM(cTaskNavigationDim, 1) @= cApprovalDim);
	vTotalTasks = DIMSIZ(cTaskDimension);
	looper = 1;
	While (looper <= vTotalTasks);
		vNavigationElem = DIMNM(cTaskDimension, looper);
		CellPutS(vNavigationElem, cTaskNavigationCube, vNavigationElem, cApprovalDim, cNavElemField);
		looper = looper +1;
	End;

Endif;
#endregion