#region Prolog
#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################

cControlPrefix = '}';

#*** Log File Name
cConfigDim = '}tp_config';
If (DimensionExists(cConfigDim) = 1);
	cGenerateLog = ATTRS(cConfigDim, 'Generate TI Log', 'String Value');
Else;
	cGenerateLog = 'N';
EndIf;

cTM1Process = GetProcessName();
StringGlobalVariable('gPrologLog');
StringGlobalVariable('gEpilogLog');
StringGlobalVariable('gDataLog');

IF (cGenerateLog @= 'Y' % cGenerateLog @= 'T');
vReturnValue = ExecuteProcess(cControlPrefix | 'tp_get_log_file_names', 'pExecutionId', pExecutionId,
'pProcess', cTM1Process, 'pControl', 'Y');
If (vReturnValue <> ProcessExitNormal());
	ProcessError;
EndIf;
Endif;

cPrologLog = gPrologLog;
cEpilogLog = gEpilogLog;
cDataLog = gDataLog;
cTM1Log = cPrologLog;


#***
cApprovalDIM = ATTRS(cControlPrefix | 'tp_applications', pAppId, 'ApprovalDimension');
cAppActive = ATTRS(cControlPrefix | 'tp_applications', pAppId, 'IsActive'); 
cApplicationCubesCube = cControlPrefix | 'tp_application_cubes';
cCubePropertiesCube = '}CubeProperties';

#***
cDataReservationType = '';
If (cAppActive @= 'Y');
	cDataReservationType = 'REQUIREDSHARED';
	If (cApprovalDIM @= '');
		cDataReservationType = 'ALLOWED';
	EndIf;
EndIf;

# parse application cube string and set values in application cubes and set DR mode
cubeSeparater = '*';
vPosCube = 0;
vStringToScan = pCubeInfo;
vPosCube = SCAN(cubeSeparater, vStringToScan);
vFirstElement = 1;


While (vPosCube >0);
	vCubeName = SUBST(vStringToScan, 1, vPosCube-1);
	vFlagCube = SUBST(vStringToScan, vPosCube+1, 1);
	
	If (cGenerateLog @= 'Y');
		TextOutput(cTM1Log, TIMST(NOW, '\Y-\m-\d \h:\i:\s'), 'Set flag in application_cubes pAppId=' | pAppId | ' CubeName=' | vCubeName | ' Flag=' | vFlagCube);
	EndIf;
	
	If (pIsAddedCube @= 'Y');
		If (vFlagCube @= 'A' % cApprovalDIM @= '') ;
			IF (cDataReservationType @<> '');
				# set DR mode when it has a valide mode type, otherwise do not overide other application's valid DR mode
				CellPutS(cDataReservationType, cCubePropertiesCube, vCubeName, 'DATARESERVATIONMODE');
			Endif;
		EndIf;

		CellPutS(vFlagCube, cApplicationCubesCube, pAppId, vCubeName);
	Else;
		#this is a cube that is removed from the application definition
		CellPutS('', cApplicationCubesCube, pAppId, vCubeName);
	Endif;
	
	vStringToScan = SUBST(vStringToScan, vPosCube +3, LONG(vStringToScan)-vPosCube);
	vPosCube = SCAN(cubeSeparater, vStringToScan);
End;

If (cGenerateLog @= 'Y');
	TextOutput(cTM1Log, TIMST(NOW, '\Y-\m-\d \h:\i:\s'), 'The end has been reached.');
EndIf;
#endregion