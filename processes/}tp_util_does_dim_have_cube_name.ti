#region Prolog


#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################

cControlPrefix = '';
If (pControl @= 'Y');
cControlPrefix = '}';
EndIf;


#*** Log File Name
cConfigDim = cControlPrefix | 'tp_config';
If (DimensionExists(cConfigDim) = 1);
	cGenerateLog = ATTRS(cConfigDim, 'Generate TI Log', 'String Value');
Else;
	cGenerateLog = 'N';
EndIf;

cTM1Process = GetProcessName();
StringGlobalVariable('gPrologLog');
StringGlobalVariable('gEpilogLog');
StringGlobalVariable('gDataLog');

IF (cGenerateLog @= 'Y' % cGenerateLog @= 'T');
vReturnValue = ExecuteProcess(cControlPrefix | 'tp_get_log_file_names', 'pExecutionId', pExecutionId,
'pProcess', cTM1Process, 'pControl', pControl);
If (vReturnValue <> ProcessExitNormal());
	ProcessError;
EndIf;
Endif;

cPrologLog = gPrologLog;
cEpilogLog = gEpilogLog;
cDataLog = gDataLog;
cTM1Log = cPrologLog;

#***

If (cGenerateLog @= 'Y');
TextOutput(cTM1Log, TIMST(NOW, '\Y-\m-\d \h:\i:\s'), 'Parameters: ', pDim, pControl);
EndIf;

#***

If (DimensionExists(pDim) = 0);
ProcessError;
EndIf;

StringGlobalVariable('gDoesDimHaveCubeName');
gDoesDimHaveCubeName = 'N';

If (CubeExists(pDim) <> 0);
gDoesDimHaveCubeName = 'Y';
EndIf;

If (gDoesDimHaveCubeName @= 'Y');
vFindDim = 'N';
cCube = pDim;
vIndex = 1;
While (vIndex > 0);
vCubeDim = TABDIM(cCube, vIndex);

If (vCubeDim @= '');
vIndex = -1;
ElseIf (vCubeDim @= pDim);
vIndex = -1;
vFindDim = 'Y';
EndIf;

vIndex = vIndex + 1;
End;

If (vFindDim @= 'N');
vReturnValue = ExecuteProcess(cControlPrefix | 'tp_error_update_error_cube', 
'pGuid', pExecutionId, 
'pProcess', cTM1Process, 
'pErrorCode', 'TI_DIM_CUBE_SAME_NAME',
'pErrorDetails', pDim,
'pControl', pControl);

ProcessError;
EndIf;

EndIf;
#endregion