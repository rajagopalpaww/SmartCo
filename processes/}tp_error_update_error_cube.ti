#region Prolog
#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################




cControlPrefix = '';
If (pControl @= 'Y');
cControlPrefix = '}';
EndIf;

#***

vCube =cControlPrefix | 'tp_process_errors';

IF ( CubeExists ( vCube ) = 0 );
  ProcessError;
ENDIF;


#*** add guid to the guid dimension
ExecuteProcess(cControlPrefix | 'tp_error_add_guid', 'pGUID', pGuid, 'pControl', pControl);

CellPutS(TM1User, vCube, pGuid, 'UserName');

IF (pProcess @<>'');
CellPutS(pProcess, vCube, pGuid, 'SourceProcess');
ENDIF;

IF ( pStartTime @<> '' );
  CellPutS( pStartTime, vCube, pGuid, 'StartTime');
ENDIF;

IF ( pEndTime @<> '' );
  CellPutS( pEndTime, vCube, pGuid, 'EndTime');
ENDIF;

vFileName= pProcess | '_' | pGuid | '_prolog.log';
if (FileExists(vFileName)=1);
  CellPutS( vFileName, vCube, pGuid, 'PrologFile');
ENDIF;

vFileName= pProcess | '_' | pGuid | '_metadata.log';
if (FileExists(vFileName)=1);
  CellPutS( vFileName, vCube, pGuid, 'MetadataFile');
ENDIF;

vFileName= pProcess | '_' | pGuid | '_data.log';
if (FileExists(vFileName)=1);
  CellPutS( vFileName, vCube, pGuid, 'DataFile');
ENDIF;

vFileName= pProcess | '_' | pGuid | '_epilog.log';
if (FileExists(vFileName)=1);
  CellPutS( vFileName, vCube, pGuid, 'EpilogFile');
ENDIF;

IF ( pErrorCode @<> '' );
  CellPutS( pErrorCode, vCube, pGuid, 'ErrorCode');
ENDIF;

IF ( pStatus @<> '' );
  CellPutS( pStatus, vCube, pGuid, 'Status');
ENDIF;

IF ( pClientStartTime @<> '' );
  CellPutS( pClientStartTime, vCube, pGuid, 'ClientStartTime');
ENDIF;


IF ( pErrorDetails @<> '' );
  CellPutS( pErrorDetails, vCube, pGuid, 'ErrorDetails');
ENDIF;

#endregion