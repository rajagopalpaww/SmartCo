#region Prolog


#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################


If (CubeExists(pCube) = 0);
	ProcessError;
EndIf;

If (pDim_1 @<> '' & DimensionExists(pDim_1) = 0);
	ProcessError;
EndIf;

If (pDim_2 @<> '' & DimensionExists(pDim_2) = 0);
	ProcessError;
EndIf;

If (pDim_3 @<> '' & DimensionExists(pDim_3) = 0);
	ProcessError;
EndIf;


If (pElem_1 @<> '' & DIMIX(pDim_1, pElem_1) = 0);
	ProcessError;
EndIf;

If (pElem_2 @<> '' & DIMIX(pDim_2, pElem_2) = 0);
	ProcessError;
EndIf;

If (pElem_3 @<> '' & DIMIX(pDim_3, pElem_3) = 0);
	ProcessError;
EndIf;


NumericGlobalVariable('gDim_1IndexInCube');
NumericGlobalVariable('gDim_2IndexInCube');
NumericGlobalVariable('gDim_3IndexInCube');
StringGlobalVariable('gSecurityOverlayTokenString');
StringGlobalVariable('gImportPattern');
gDim_1IndexInCube = 0;
gDim_2IndexInCube = 0;
gDim_3IndexInCube = 0;
gSecurityOverlayTokenString = '';
gImportPattern = '';


vIndex = 1;
While (vIndex > 0);
	vCubeDim = TABDIM(pCube, vIndex);

	If (vCubeDim @= '');
		vIndex = -1;
	ElseIf (pDim_1 @<> '' & vCubeDim @= pDim_1);	
		gDim_1IndexInCube = vIndex;
		vSingleToken = '1';
		If (pElem_1 @<> '');
			vSinglePattern = pElem_1 | '|';
		Else;
			vSinglePattern = '?|';
		EndIf;
	ElseIf (pDim_2 @<> '' & vCubeDim @= pDim_2);	
		gDim_2IndexInCube = vIndex;
		vSingleToken = '1';
		If (pElem_2 @<> '');
			vSinglePattern = pElem_2 | '|';
		Else;
			vSinglePattern = '?|';
		EndIf;
	ElseIf (pDim_3 @<> '' & vCubeDim @= pDim_3);	
		gDim_3IndexInCube = vIndex;
		vSingleToken = '1';
		If (pElem_3 @<> '');
			vSinglePattern = pElem_3 | '|';
		Else;
			vSinglePattern = '?|';
		EndIf;
	Else;
		vSingleToken = '0';
		vSinglePattern = '*|';
	EndIf;
	
	If (vIndex > 0);
		If (vIndex > 1);
			vSingleToken = ':' | vSingleToken;
		EndIf;
		gSecurityOverlayTokenString = gSecurityOverlayTokenString | vSingleToken;
	EndIf;
	
	gImportPattern = gImportPattern | vSinglePattern;
	
	vIndex = vIndex + 1;
End;
#endregion